server:
  port: ${PORT:0}

spring:
  sleuth.sampler.percentage: 1.0
  zipkin.sender.type: rabbit

management:
  cloudfoundry:
    skip-ssl-validation: true
    enabled: true
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: '*'
  endpoint:
    health:
      roles: USER
      show-details: always
    env:
      keys-to-sanitize:  pwd,uid,password,secret,key,client_id,client_key # suffix or regex

logging:
  level:
    com.netflix: INFO
    org.springframework.cloud: INFO
    io.pivotal.sfdc: INFO

sfdc:
  service:
    unavailable: '{"status":503,"data": "Service currently unavailable."}'
  authservice:
    endpoint: //authservice
  query:
    accounts: select account.id, account.name, account.type, (select contact.id, contact.lastname from account.contacts) from account
    opp_by_accts: select account.id, account.name, account.type, (select opportunity.id, opportunity.name, opportunity.type, opportunity.amount, opportunity.stagename, opportunity.closedate from account.opportunities) from account
    loadsql: select account.id, account.name, account.type, account.description, account.industry, account.ownership, account.website, account.phone, account.NumberOfEmployees, (select contact.id, contact.title, contact.department, contact.email, contact.name, contact.salutation, contact.phone, contact.mobilePhone, contact.firstName, contact.accountId, contact.lastname from account.contacts), (select opportunity.id, opportunity.name, opportunity.type, opportunity.amount, opportunity.stagename, opportunity.closedate, opportunity.description, opportunity.nextStep, opportunity.leadSource, opportunity.accountId from account.opportunities) from account
---
spring:
  profiles: local
  # instance:
  #   nonSecurePort: ${server.port}
  redis:
    host: redis
    port: 6379
eureka:
  instance:
    preferIpAddress: true
    hostname: accountservice
    # nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:discovery}:8761/eureka/
# Ribbon Configurations
producer:
  ribbon:
    ServerListRefreshInterval: 5000
ribbon:
  IsSecure: false
---
spring:
  profiles: cloud # For deployment in Cloud Foundry
  cloud:
    services:
      registrationMethod: direct
producer:
  ribbon:
    ServerListRefreshInterval: 5000
ribbon:
  IsSecure: false
